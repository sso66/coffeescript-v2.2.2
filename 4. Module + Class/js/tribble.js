// Generated by CoffeeScript 2.2.2
// tribble.js
var Tribble, tribble1, tribble2;

console.log('Classes: Function with Prototypes');

Tribble = (function() {
  class Tribble {
    constructor() {
      this.isAlive = true;
      Tribble.count++;
    }

    // Prototype properties
    breed() {
      if (this.isAlive) {
        return new Tribble;
      }
    }

    die() {
      if (this.isAlive) {
        Tribble.count--;
      }
      return this.isAlive = false;
    }

    static makeTrouble() {
      var i;
      return console.log(((function() {
        var j, ref, results;
        results = [];
        for (i = j = 1, ref = this.count; (1 <= ref ? j <= ref : j >= ref); i = 1 <= ref ? ++j : --j) {
          results.push('Trouble!');
        }
        return results;
      }).call(this)).join(''));
    }

  };

  // Class properties
  Tribble.count = 0;

  return Tribble;

}).call(this);

tribble1 = new Tribble;

tribble2 = new Tribble;

Tribble.makeTrouble();

tribble1.die();

Tribble.makeTrouble();

tribble2.breed().breed().breed();

Tribble.makeTrouble();

// eof
